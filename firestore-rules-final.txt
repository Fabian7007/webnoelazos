rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    match /products/{productId} {
      allow read: if true;
      allow create, delete: if request.auth != null && exists(/databases/$(database)/documents/admin/$(request.auth.uid));
      
      allow update: if 
        // Los administradores pueden actualizar cualquier campo
        (request.auth != null && exists(/databases/$(database)/documents/admin/$(request.auth.uid))) ||
        // Cualquier usuario puede actualizar solo likesCount y updatedAt
        (request.resource.data.diff(resource.data).affectedKeys().hasOnly(['likesCount', 'updatedAt']) &&
         (request.resource.data.likesCount == resource.data.likesCount + 1 ||
          request.resource.data.likesCount == resource.data.likesCount - 1));
    }

    match /likes/{likeId} {
      allow read: if true;
      allow create, delete, update: if true;
    }

    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow read: if request.auth != null && exists(/databases/$(database)/documents/admin/$(request.auth.uid));
    }

    match /admin/{adminId} {
      allow read: if request.auth != null;
      allow write: if false;
    }
  }
}
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Colección de usuarios
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      // Los administradores pueden leer todos los usuarios
      allow read: if request.auth != null && exists(/databases/$(database)/documents/admin/$(request.auth.uid));
    }

    // Colección de administradores - solo lectura, escritura bloqueada desde el cliente
    match /admin/{adminId} {
      allow read: if request.auth != null;
      allow write: if false; // Solo se puede modificar desde Firebase Console
    }

    // Colección de productos
    match /products/{productId} {
      allow read: if true;
      allow create, delete: if request.auth != null && exists(/databases/$(database)/documents/admin/$(request.auth.uid));
      
      // Regla de actualización mejorada
      allow update: if request.auth != null && 
                    // Los administradores pueden actualizar cualquier campo.
                    (exists(/databases/$(database)/documents/admin/$(request.auth.uid))) ||
                    // Los usuarios autenticados pueden actualizar solo 'likesCount' y 'updatedAt'.
                    (request.resource.data.diff(resource.data).affectedKeys().hasOnly(['likesCount', 'updatedAt']) &&
                    // Y el cambio en likesCount debe ser exactamente +1 o -1.
                    (request.resource.data.likesCount == resource.data.likesCount + 1 || request.resource.data.likesCount == resource.data.likesCount - 1));
    }

    // Colección de likes - usuarios pueden crear/eliminar sus propios likes
    match /likes/{likeId} {
      allow read: if request.auth != null;
      allow create, delete: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }

    // Regla general para otras colecciones (si las hubiera)
    match /{document=**} {
      allow read: if true;
      allow write: if request.auth != null;
    }
  }
}